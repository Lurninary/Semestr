{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://semestr/./YouTubeAPI.mjs","webpack://semestr/./main.js"],"sourcesContent":["class YouTubeVideo {\r\n    constructor(id, title, author, views, duration, preview, upload)\r\n    {\r\n        this.id = id\r\n        this.title = title\r\n        this.author = author\r\n        this.preview = preview\r\n        this.views = views\r\n        this.duration = duration\r\n        this.upload = upload\r\n    }\r\n}\r\n\r\nclass YouTubeAPI {\r\n    constructor(apiKey) {\r\n        this.apiKey = apiKey;\r\n    }\r\n\r\n    \r\n\r\n    getVideoDetails(videoId) {\r\n        const url = `https://youtube.googleapis.com/youtube/v3/videos?part=snippet,statistics,contentDetails,id&id=${videoId}&key=${this.apiKey}`;\r\n        let DataArray = []\r\n        console.log(`getVideoDetails: Sending request to ${url}`);\r\n        return fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            DataArray.push(new YouTubeVideo(\r\n            data.items[0].id.videoId,\r\n            data.items[0].snippet.title,\r\n            data.items[0].snippet.channelTitle,\r\n            data.items[0].statistics.viewCount,\r\n            data.items[0].contentDetails.duration,\r\n            data.items[0].snippet.thumbnails.medium.url,\r\n            data.items[0].snippet.publishedAt\r\n            ))\r\n        return DataArray;\r\n        });\r\n    }\r\n\r\n    searchVideosWithFilters(query, maxResults, filters) {\r\n        let url = `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${query}&type=video&maxResults=${maxResults}&key=${this.apiKey}`;\r\n        let DataArray = []\r\n        if (filters) {\r\n        if (filters.orderBy) {\r\n            url += `&order=${filters.orderBy}`;\r\n        }\r\n        if (filters.publishedAfter) {\r\n            url += `&publishedAfter=${filters.publishedAfter}`;\r\n        }\r\n        if (filters.publishedBefore) {\r\n            url += `&publishedBefore=${filters.publishedBefore}`;\r\n        }\r\n        if (filters.videoDefinition) {\r\n            url += `&videoDefinition=${filters.videoDefinition}`;\r\n        }\r\n        }\r\n        console.log(`searchVideosWithFilters: Sending request to ${url}`);\r\n        return fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            for(let i=0; i<data.items.length; i++){\r\n                DataArray.push(new YouTubeVideo(\r\n                data.items[i].id.videoId,\r\n                data.items[i].snippet.title,\r\n                data.items[i].snippet.channelTitle,\r\n                null,\r\n                null,\r\n                data.items[i].snippet.thumbnails.medium.url,\r\n                data.items[i].snippet.publishedAt\r\n                ))\r\n            }\r\n        return DataArray;\r\n        });\r\n    }\r\n}\r\n\r\nexport {YouTubeAPI, YouTubeVideo};","import { YouTubeAPI, YouTubeVideo } from \"./YouTubeAPI.mjs\"\r\n\r\nconst apiKey = 'AIzaSyCXAv-2ZqSYc3BCF0ZL04t3ynrnrECTkQ0'\r\nconst youtube = new YouTubeAPI(apiKey);\r\n\r\nconst videosTable = document.getElementById('videos')\r\nconst searchTable = document.getElementById('searchData')\r\nconst infoTable = document.getElementById('videoInfo')\r\n\r\nconst docTitle = document.getElementById('userName')\r\nconst webLink = document.getElementById('link')\r\nconst searchButton = document.getElementById('search_button')\r\nconst getVideo = document.getElementById('get_video')\r\n\r\nlet name = prompt(\"Привет! Как вас зовут?\")\r\ndocTitle.textContent = \"Привет, \" + name + \"!\";\r\n\r\nlet videosData = []\r\n\r\nfunction renderTable(data, table)\r\n{\r\n    table.innerHTML=''\r\n    console.log(\"start render\" + table.id)\r\n    for (let video of data)\r\n    {\r\n        let row = document.createElement('tr')\r\n\r\n        for (let item in video)\r\n        {\r\n            if(item != null){\r\n                let column = document.createElement('th')\r\n\r\n                if(item != \"preview\")\r\n                {\r\n                    column.textContent = video[item] \r\n                }else\r\n                {\r\n                    let image = document.createElement(\"img\")\r\n                    image.src = video[item]\r\n                    column.appendChild(image)\r\n                }\r\n                row.appendChild(column)\r\n            }\r\n        }\r\n        if(table.id == \"searchData\")\r\n        {\r\n            let addButton = document.createElement('button')\r\n            addButton.textContent = \"Добавить\"\r\n            setListener(addButton, 'click', async () =>{\r\n                addVideo(video)\r\n            })\r\n            let column = document.createElement('th')\r\n            column.appendChild(addButton)\r\n            row.appendChild(column)\r\n        }\r\n        table.appendChild(row)\r\n    }\r\n}\r\n\r\nconst setListener = (element, type, handler) => {\r\n    console.log(\"Adding listener to ${element}\")\r\n    if (!element) \r\n    {\r\n        return\r\n    }\r\n    element.addEventListener(type, handler)\r\n    return () => {\r\n        element.removeEventListener(type, handler)\r\n    }\r\n    \r\n}\r\n\r\nfunction addVideo(video)\r\n{\r\n    videosData.push(video)\r\n    renderTable(videosData, videosTable)\r\n}\r\n\r\nsetListener(getVideo, 'click', async () => {\r\n    youtube.getVideoDetails(webLink.value.replace('https://www.youtube.com/watch?v=', ''))\r\n    .then(video => {\r\n        console.log(video);\r\n    })\r\n    .catch(error => {\r\n        console.error(error);\r\n    });\r\n})\r\n\r\nlet filters = {\r\n    type: \"video\",\r\n    orderBy: \"viewCount\",\r\n    videoDefinition: \"high\",\r\n    videoEmbeddable: \"true\"\r\n};\r\n\r\nsetListener(searchButton, 'click', async () => {\r\n    youtube.searchVideosWithFilters(\"JavaScript_tutorial\", 5, filters)\r\n    .then(videos => {\r\n    console.log(videos);\r\n    renderTable(videos, searchTable)\r\n    })\r\n    .catch(error => {\r\n    console.error(error);\r\n    });\r\n})"],"names":["YouTubeVideo","constructor","id","title","author","views","duration","preview","upload","this","youtube","apiKey","getVideoDetails","videoId","url","DataArray","console","log","fetch","then","response","json","data","push","items","snippet","channelTitle","statistics","viewCount","contentDetails","thumbnails","medium","publishedAt","searchVideosWithFilters","query","maxResults","filters","orderBy","publishedAfter","publishedBefore","videoDefinition","i","length","videosTable","document","getElementById","searchTable","docTitle","webLink","searchButton","getVideo","prompt","textContent","videosData","renderTable","table","innerHTML","video","row","createElement","item","column","image","src","appendChild","addButton","setListener","async","addVideo","element","type","handler","addEventListener","removeEventListener","value","replace","catch","error","videoEmbeddable","videos"],"sourceRoot":""}